from Crypto.Util.number import inverse
from Crypto.PublicKey import RSA

N = 3646154850295011369707131011438711095400799139943170490872585628683549034362552065955809589514611470241298944167703929337528884908857116141935206466329731087514964112054543019336536216107629523597606330154669196064144182472739556974502462402438903115845725630946428943768540714098264727068026730424033578827886916761701429264950573899186177
e = 65537

p = 2**521-1
q = 2**607-1
phi = (p - 1) * (q - 1)
d = inverse(e, phi)

key = RSA.construct((N, e, d))
f = open('private_key.pem', 'wb')
f.write(key.export_key('PEM'))
f.close()
